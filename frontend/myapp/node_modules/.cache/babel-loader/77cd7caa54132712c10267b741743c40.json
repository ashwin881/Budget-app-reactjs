{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwin\\\\budget_app\\\\myapp\\\\src\\\\Context\\\\AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:4000/postmessages'; // Initial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\nexport const GlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get(baseUrl);\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(baseUrl + `/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post(baseUrl, transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRANSACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 11\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/Ashwin/budget_app/myapp/src/Context/AppContext.js"],"names":["React","createContext","useReducer","AppReducer","axios","baseUrl","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\nconst baseUrl = 'http://localhost:4000/postmessages'\r\n// Initial state\r\nconst initialState = {\r\n\r\n  transactions: [],\r\n  error: null,\r\n  loading: true\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  async function getTransactions() {\r\n    try {\r\n      const res = await axios.get(baseUrl);\r\n\r\n      dispatch({\r\n        type: 'GET_TRANSACTIONS',\r\n        payload: res.data.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  async function deleteTransaction(id) {\r\n    try {\r\n      await axios.delete(baseUrl+`/${id}`);\r\n\r\n      dispatch({\r\n        type: 'DELETE_TRANSACTION',\r\n        payload: id\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  async function addTransaction(transaction) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(baseUrl, transaction, config);\r\n\r\n      dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: res.data.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: 'TRANSACTION_ERROR',\r\n        payload: err.response.data.error\r\n      });\r\n    }\r\n  }\r\n\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    error: state.error,\r\n    loading: state.loading,\r\n    getTransactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}"]},"metadata":{},"sourceType":"module"}
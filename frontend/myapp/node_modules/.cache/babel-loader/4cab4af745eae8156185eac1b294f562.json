{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashwin\\\\budget_app\\\\myapp\\\\src\\\\Context\\\\AppContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport PostMessage from \"../PostMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case 'DELETE_EXPENSE':\n      return { ...state,\n        expenses: state.expenses.filter(expense => expense.id !== action.payload)\n      };\n\n    case 'SET_BUDGET':\n      return { ...state,\n        budget: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n_c = AppReducer;\nlet arr = PostMessage().fetchAll().then(res => {\n  console.log(res);\n  let dat = res.data;\n  let arr = [];\n\n  for (let i = 0; i < dat.length; i++) {\n    arr.push({\n      'id': dat[i]._id,\n      'name': dat[i].name,\n      'cost': dat[i].cost\n    });\n  }\n\n  return arr;\n});\nconst initialState = {\n  budget: 10000,\n  expenses: arr\n};\nexport const AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = props => {\n  _s();\n\n  console.log(props);\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      budget: state.budget,\n      expenses: state.expenses,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 14\n  }, this);\n};\n\n_s(AppProvider, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c2 = AppProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/Ashwin/budget_app/myapp/src/Context/AppContext.js"],"names":["createContext","useReducer","PostMessage","AppReducer","state","action","type","expenses","payload","filter","expense","id","budget","arr","fetchAll","then","res","console","log","dat","data","i","length","push","_id","name","cost","initialState","AppContext","AppProvider","props","dispatch","children"],"mappings":";;;AACA,SAASA,aAAT,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,aAAL;AAEC,aAAO,EAAC,GAAGF,KAAJ;AAAUG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAApB,OAAP;;AAGK,SAAK,gBAAL;AACI,aAAO,EACH,GAAGJ,KADA;AACMG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAuBC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAzD;AADhB,OAAP;;AAIA,SAAK,YAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEHQ,QAAAA,MAAM,EAAEP,MAAM,CAACG;AAFZ,OAAP;;AAId;AACC,aAAOJ,KAAP;AAjBF;AAmBA,CApBM;KAAMD,U;AAqBb,IAAIU,GAAG,GAAEX,WAAW,GAAGY,QAAd,GACRC,IADQ,CACHC,GAAG,IAAI;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,MAAIG,GAAG,GAAGH,GAAG,CAACI,IAAd;AACA,MAAIP,GAAG,GAAC,EAAR;;AACA,OAAI,IAAIQ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,GAAG,CAACG,MAAlB,EAAyBD,CAAC,EAA1B,EAA8B;AAC5BR,IAAAA,GAAG,CAACU,IAAJ,CAAS;AAAC,YAAKJ,GAAG,CAACE,CAAD,CAAH,CAAOG,GAAb;AAAiB,cAAOL,GAAG,CAACE,CAAD,CAAH,CAAOI,IAA/B;AAAoC,cAAON,GAAG,CAACE,CAAD,CAAH,CAAOK;AAAlD,KAAT;AAGD;;AACD,SAAOb,GAAP;AAGH,CAbQ,CAAT;AAcA,MAAMc,YAAY,GAAE;AAChBf,EAAAA,MAAM,EAAC,KADS;AAGhBL,EAAAA,QAAQ,EAACM;AAHO,CAApB;AASA,OAAO,MAAMe,UAAU,gBAAG5B,aAAa,EAAhC;AAEP,OAAO,MAAM6B,WAAW,GAAEC,KAAD,IAAS;AAAA;;AAC9Bb,EAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACC,QAAM,CAAC1B,KAAD,EAAO2B,QAAP,IAAiB9B,UAAU,CAACE,UAAD,EAAYwB,YAAZ,CAAjC;AAEA,sBAAQ,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAChCf,MAAAA,MAAM,EAACR,KAAK,CAACQ,MADmB;AACZL,MAAAA,QAAQ,EAACH,KAAK,CAACG,QADH;AACYwB,MAAAA;AADZ,KAA5B;AAAA,cAELD,KAAK,CAACE;AAFD;AAAA;AAAA;AAAA;AAAA,UAAR;AAGJ,CAPM;;GAAMH,W;;MAAAA,W","sourcesContent":["\r\nimport { createContext,useReducer} from \"react\"\r\nimport PostMessage from \"../PostMessage\"\r\n\r\nexport const AppReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_EXPENSE':\r\n         \r\n\t\t\treturn {...state,expenses: [...state.expenses, action.payload],}\r\n       \r\n       \r\n        case 'DELETE_EXPENSE':\r\n            return {\r\n                ...state,expenses: state.expenses.filter((expense) => expense.id !== action.payload),\r\n            }\r\n\t\t\r\n            case 'SET_BUDGET':\r\n                return {\r\n                    ...state,\r\n                    budget: action.payload,\r\n                }\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nlet arr= PostMessage().fetchAll()\r\n.then(res => {\r\n    console.log(res)\r\n    let dat = res.data;\r\n    let arr=[];\r\n    for(let i=0;i<dat.length;i++) {\r\n      arr.push({'id':dat[i]._id,'name':dat[i].name,'cost':dat[i].cost})\r\n\r\n\r\n    }\r\n    return arr\r\n  \r\n  \r\n})\r\nconst initialState ={\r\n    budget:10000,\r\n   \r\n    expenses:arr\r\n       \r\n        \r\n        \r\n\r\n};\r\nexport const AppContext = createContext();\r\n\r\nexport const AppProvider=(props)=>{\r\n    console.log(props);\r\n     const [state,dispatch]=useReducer(AppReducer,initialState);\r\n    \r\n     return (<AppContext.Provider value={{\r\n         budget:state.budget,expenses:state.expenses,dispatch}\r\n     }>{props.children}</AppContext.Provider>)\r\n};"]},"metadata":{},"sourceType":"module"}